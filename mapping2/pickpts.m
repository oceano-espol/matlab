function ii = pickpts(pos)%Function [i1,i2] = pickpts(Pos) -- Pick points from a position array%  Finds the indices of an input position array (Pos) for locations%  cicked on by the mouse. Outputs indices in an index vector in the%  order clicked. %%  Uses GINPUT, INPOLYGON, and a coastline file named WORLD50.MAT.%  If if the user has a different coastline file, he/she should%  modify the first line of code ('load...') accordingly. If no   %  coastline file is available, comment out all of the first section. % Section 1: Plot coastlineload world50, cstX = world50(:,1); cstY = world50(:,2);%set pos to 0-360 conventionpos(pos(:,1)<=0,1) = pos(pos(:,1)<=0,1) + 360;v = [floor(min(pos(:,1)))-5,ceil(max(pos(:,1)))+5,...	floor(min(pos(:,2)))-5,ceil(max(pos(:,2)))+5];cstX(cstX<=0) = cstX(cstX<=0) + 360;  % convert negative longitudes (if exist)if v(2)>360     % if locations go to Lon > 360	cstX(cstX>0 & cstX<=v(2)-360) = cstX(cstX>0 & cstX<=v(2)-360) + 360; endplot(cstX,cstY,'-k'), hold on; % Section 2: Plot data locationszx = pos(:,1); zy = pos(:,2);plot(zx,zy,'ob');  % Plot the data locationsset(gca,'xlim',[v(1),v(2)],'ylim',[v(3),v(4)])% Section 3: Pick & plot the clicked-on pointsii = []; k = 0;for j = 1:1000	k = k + 1;	[xx,yy,button] = ginput(1);     % Input polygon vertices	if (isempty(xx)==1 | button==13 | xx<v(1)) break	else		dd = sqrt((xx-zx).^2 + (yy-zy).^2);		iik = find(dd == min(dd));		ii = [ii,iik];%		Is this a re-clicked point?		if k>1, kk = find(ii(1:k-1) == iik); else kk = []; end%		If not, plot the new point; else remove the re-click & uncolor it		if isempty(kk) == 1, plot(zx(iik),zy(iik),'or')		else plot(zx(iik),zy(iik),'ob'), ii([kk,k]) = []; k = k-2; end	endend