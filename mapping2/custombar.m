function hb = custombar(cax,tics,pb,orient)%Function hb = custombar(Cax,Ticks,BarPos,Orient) -- custom colorbar%  Creates a colorbar to the right of or below a raster plot, giving%  the user more control over position, bar width and labels.%%  User must specify the color limits <Cax> and the tickmark positions%  (<Ticks> vector), but the bar position <BarPos> & orientation <Orient>%  are optional. <Orient> = 'vert'(default) or 'horiz'. If the <BarPos>%  is not passed, it is assumed that the bar will be placed next to the%  last  raster map (frequently a subplot), & the plot is nudged 5% up or%  to the left to make room for the bar. You may not like this guess.%  If <BarPos> is passed, the bar will be placed using your coordinates. %  Reasons for specifying your own <BarPos> include 1) you don't like the %  default positioning, and 2) a single bar is to be placed to the right %  of (or below) a column of subplots that use the same value range. %%  Example #1: default usage (vertical bar to right of plot):%  > cax = [-.7,.7]; %  > hb = custombar(cax,[-.6,-.3,0,.3,.6]);  %%  Example #2: <BarPos> usage (nudge plot to left, specify bar position):%  > cax = [-.7,.7]; %  > p = get(gca,'position')                 % get the plot position %  > set(gca,'position',[p(1)-.05,p(2),p(3),p(4)]) % nudge plot to left%  > custombar(cax,[-.6,-.3,0,.3,.6],[p(1),p(2),.04,p(4)])  if nargin == 4	if strcmp(orient,'vert') == 1, select = 1; else select = 2; endelseif nargin == 3	if isstr(pb)	disp('Need first three inputs');	return	else; orient = 'vert'; select = 1; endelseif nargin < 3	disp('Need first three inputs');	returnendif select == 1		h = axes('units','normalized','position',pb,'visible','off');		yy = cax(1):(cax(2)-cax(1))/63:cax(2); 		caxis(cax); 		xx = [0,1]; cc = [(1:64)',(1:64)'];		hp = pcolor(xx,yy,cc); hold on		hb = get(gca); hb = gca;		yl = get(gca,'ylim');		set(hp,'edgecolor','none')		set(gca,'xticklabel',[],'yticklabel',[]) 		if exist('tics') == 0; return; end		set(gca,'ytick',tics)		plot([zeros(1,length(tics));ones(1,length(tics))],[tics;tics],'-k')		for k = 1:length(tics); 			text(1.2,tics(k),num2str(tics(k))) % ,'fontname','palatino','fontweight','demi'); 		endelse		h = axes('units','normalized','position',pb,'visible','off');		nn = 64;		xx = cax(1):(cax(2)-cax(1))/(nn-1):cax(2); 		caxis(cax); 		yy = [0,1]; cc = [(1:nn);(1:nn)];		hp = pcolor(xx,yy,cc); hold on		hb = get(gca); hb = gca;		yl = get(gca,'ylim');		set(hp,'edgecolor','none')		set(gca,'yticklabel',[]) % 		set(gca,'fontname','palatino','fontweight','demi')		if exist('tics') == 0; return; end		set(gca,'xtick',tics)		plot([tics;tics],[zeros(1,length(tics));ones(1,length(tics))],'-k')%		for k = 1:length(tics); %			text(tics(k)-.01,-.5,num2str(tics(k)),'fontname','palatino','fontweight','demi'); %		endendset(gca,'visible','on'), set(gca,'box','on')function [p2,select] = nudge(p1,orient)% Nudge plot up/left, output barpos & selection parameter for orientationif strcmp(orient,'vert') == 1	set(gca,'position',[p1(1)-.05,p1(2),p1(3),p1(4)]);	p2 = [p1(1)+p1(3),p1(2),.05,p1(4)];	select = 1;else	set(gca,'position',[p1(1),p1(2)+.05,p1(3),p1(4)]);	p2 = [p1(1),p1(2),p1(3),.05];	select = 2;end