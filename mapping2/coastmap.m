function h = coastmap(v,fillseg,dxdy,usermap)%Function COASTMAP(v,fill,dxdy,usermap) - Plot a filled-polygon coastline map%   %  Plots a filled-polygon map from the 50 km world coastline data. %  Uses an input axis vector V = [Lon1,Lon2,Lat1,Lat2] to plot a Lat-Lon%  grid with dotted grid lines at Lat,Lon intervals <DxDy> & the dateline %  and equator solid. %%  South latitudes are negative and longitudes must be expressed as degrees %  east of Greenwich. Lon1 should be less than Lon2, except when plotting %  across the Greenwich meridian. For example, to plot the Americas, %  V = [230,340,-50,50]. The landmass segments in the coastline map have been %  separated at 20E so that a complete map of the Atlantic can be made, %  including the western half of Africa. Hence the situation Lon1 >= Lon2 %  can be handled if Lon2 <= 20. For example, V = [280,20,-50,50] will plot %  the entire width of the Atlantic. The default domain is V = [20,20,-80,80].%%  <DxDy> determines the Lat-Lon interval for drawing grid lines and axis %  labels. It defaults to 40 if there are no inputs at all, or to 20 otherwise.%%  Landmasses are gray-filled by default. If <Fill> == 'nofill', a 50-km  %  coastline will be plotted but land areas will not be filled. %%  The optional output <h(k)> are the handles to the filled land polygons.%%  None of the inputs are mandatory. world50.mat must be in the matlabpath.%  The 50-km resolution may not be adequate for small regional maps. % Editado por Jonathan Cedeño el 10/Nov/2007% jcedeno@espol.edu.ecif length(dxdy)==1, dxdy=[dxdy,dxdy]; endif length(dxdy)>=3, error('dxdy is wrong, check it SVP'), endif nargin==4    load ([usermap])    coastline=eval(usermap);    clear usermap ([usermap])else    load world50                % Load the coastline data    coastline = world50;    clear world50end% col = [0,0,0];            % Set the default fill color to blackcol = [.45,.45,.45];        % Set the default fill color to darker gray% col = [.85,.85,.85];        % Set the default fill color to lighter graymatver = version;           % Determine the Matlab versionlc = 'k';% lc = [.2,.4,.2];            % Set coastline color  lw = .5;                    % set linewidth of coastlineddef = 10;                  % Set the default grid interval% Parse the argumentsif nargin < 1 	v = [20,20,-80,80]; dxdy = 2*ddef; fillseg = 'fill';elseif nargin == 1, 	if length(v)==4, dxdy = ddef; fillseg = 'fill'; 	elseif isstr(v), fillseg = v; v = [20,20,-80,80]; dxdy = 2*ddef; 	else, dxdy = v; v = [20,20,-80,80]; fillseg = 'fill'; endelseif nargin == 2    if length(v)==4, dxdy = ddef;	elseif isstr(v), v = [20,20,-80,80]; dxdy = 2*ddef; 	else, dxdy = v; v = [20,20,-80,80]; endend% Fix a cross-Greenwich situation if it existsif v(2) <= v(1) & v(2) <= 20	jg = find(isnan(coastline(:,1))==0);		jj = find(coastline(jg,1)<=20);	coastline(jg(jj),1) = coastline(jg(jj),1) + 360;	v(2) = v(2) + 360;end% Plot filled polygon areas of coastlinekk=find(isnan(coastline(:,1))==1); nn = length(kk);k1=[1;kk(1:nn-1)+1]; k2=kk-1; for k = 1:nn	if strcmp(fillseg,'nofill') == 0 		h(k) = fill(coastline(k1(k):k2(k),1),coastline(k1(k):k2(k),2),col); hold on        % Set the polygon elevations to a height above any subsequent contouring %       set(h(k),'Zdata',1.0e+13*ones(length(get(h(k),'Xdata')),1))	end	plot(coastline(k1(k):k2(k),1),coastline(k1(k):k2(k),2),...        'color',lc,'linewidth',lw), hold on   % Do coastlinesend% Plot the equator, dateline and Greenwichplot([v(1),v(2)],[0,0],['-k'],[180,180],...	[v(3),v(4)],['-k'],[360,360],[v(3),v(4)],['-k'])% Set the gridaxis(v),lons = [dxdy(1)*ceil(v(1)/dxdy(1)):dxdy(1):dxdy(1)*floor(v(2)/dxdy(1))];lats = [dxdy(2)*ceil(v(3)/dxdy(2)):dxdy(2):dxdy(2)*floor(v(4)/dxdy(2))];set(gca,'xtick',lons,'ytick',lats);grid% Create the axis labelsnl = length(lons); strx = [];for k=1:nl	if lons(k)<180		strx = strvcat(strx,[int2str(lons(k)),'E']);	elseif lons(k)==180		strx = strvcat(strx,[int2str(lons(k))]);	elseif lons(k)>360		strx = strvcat(strx,[int2str(lons(k)-360),'E']);	else		strx = strvcat(strx,[int2str(360-lons(k)),'W']);	endendnl = length(lats); stry = [];for k=1:nl	if lats(k)<0		stry = strvcat(stry,[int2str(abs(lats(k))),'S']);	elseif lats(k)==0		stry = strvcat(stry,[int2str(lats(k))]);	else		stry = strvcat(stry,[int2str(lats(k)),'N']);	endend% Place plot frame above the mapset(gca,'layer','top')% Square the aspect ratio and set the axis labels%if (strcmp(matver(1),'6') | strcmp(matver(1),'5'))	set(gca,'DataAspectRatio',[1,1,1]);	set(gca,'xticklabel',strx,'yticklabel',stry)%else%	set(gca,'DataAspectRatio',[(v(2)-v(1)),(v(4)-v(3)),1])%	set(gca,'xticklabels',strx,'yticklabels',stry)%end% xlabel('Longitude','fontsize',10,'fontweight','bold') % EN% ylabel('Latitude','fontsize',10,'fontweight','bold')  % ENxlabel('Longitud','fontsize',10,'fontweight','bold')ylabel('Latitud','fontsize',10,'fontweight','bold')boxdraw(v,'-k');      % draw black rectangular perimeter around the map